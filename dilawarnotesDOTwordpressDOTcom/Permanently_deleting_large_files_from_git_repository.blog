<TYPE>post</TYPE>
<STATUS>publish</STATUS>
<ID>803</ID>
<TITLE>
Permanently deleting large files from git repository
</TITLE>

<CONTENT>
Gurus on <a class="zem_slink" title="Stack Overflow" href="http://stackoverflow.com/" target="_blank" rel="homepage">Stackoverflow</a> have already <a href="http://stackoverflow.com/questions/5563564/remove-files-from-git-repo-completely">answered</a> it. I wrote a script which automate this process.  I have written <a href="https://github.com/dilawar/Scripts/blob/master/git_search_and_purge.py">a   python script</a> to automate this process. This script accepts size of the file after -s switch (in bytes) and <a class="zem_slink" title="Regular   expression" href="http://en.wikipedia.org/wiki/Regular_expression" target="_blank" rel="wikipedia">regular expression</a> after -e switch to match against the name of the file. For example, if I want to delete files bigger than 20000 bytes and with names prefixed by pdf then I'll have to  use the script as following :  

<pre> python git_search_and_purge.py -s 20000 -e .*pdf$ </pre>

  It might take a lot of time to complete the job. It writes full branch-tree as many times are their are commits. I believe you know the danger of doing this on a shared repository. Another script which only searches files bigger than a given size and regular pattern. Regular pattern is optional. If it is not given, all files  bigger than given size are printed on console. This script <a href="https://github.com/dilawar/Scripts/blob/master/git_find_big_files.py">is   available here</a>. Using it is safe. It does not change the state of repository in any way. You can dump its output to a file and then execute your evil plans accordingly. On github, there is an article on 'removing sensitive data from github' or something like that. Do read that article. Happy gitting!  <h6 class="zemanta-related-title" style="font-size:1em;">Related articles</h6><ul class="zemanta-article-ul"><li class="zemanta-article-ul-li"><a href="http://durdn.com/blog/2013/01/14/10-git-tips-and-workflows-round-2/" target="_blank">Git Tips And Workflows, Round 2: basics, stashes and     submodules</a> (durdn.com)</li></ul>

</CONTENT>

<CATEGORY ID="136">git</CATEGORY>

<POST_TAG ID="137">git</POST_TAG>

<POST_TAG ID="175">python script</POST_TAG>
