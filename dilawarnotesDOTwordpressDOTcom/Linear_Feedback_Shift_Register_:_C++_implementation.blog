<TYPE>post</TYPE>
<STATUS>publish</STATUS>
<ID>125</ID>
<TITLE>
Linear Feedback Shift Register : C++ implementation
</TITLE>

<CONTENT>
<a href="http://en.wikipedia.org/wiki/Linear_feedback_shift_register" target="_blank">Linear Feedback Shift Registers</a> (LFSR) arises in many applications, especially in communications. See wiki page for a good introduction <a href="http://en.wikipedia.org/wiki/Linear_feedback_shift_register">http://en.wikipedia.org/wiki/Linear_feedback_shift_register</a>.

We implemented LFSR in C++ which can be found here <a href="https://ee717-iitb.googlecode.com/svn/trunk/A5-1/">https://ee717-iitb.googlecode.com/svn/trunk/A5-1/</a> . You can download this code by using <a href="http://en.wikipedia.org/wiki/Apache_Subversion">svn</a>. If you are not aware of <strong> svn </strong>then you can simply download these files manually.

This is a <code> make </code> file project. After having all these files in a directory; command <code> make all </code> should build it. Make sure you have <strong>make</strong> utility installed. Windows user can use <a href="http://www.cygwin.com/"><strong>Cygwin</strong></a> compatibility layer, or for a better world, you can switch to Unix for once and forever.

The code is sufficiently commented but not documented in single pdf file. I believe that it has no bug but I take no responsibility for any harm caused by its use. Nonetheless my best wishes.

See <strong>README</strong> file before using it. After compilation, <code>./lfsr --help </code> should tell you what you need to do.

You can specify polynomial at run time but you will have no control over public key.

</CONTENT>

<POST_TAG ID="18">C++ implementation of LFSR</POST_TAG>

<CATEGORY ID="12">Communication</CATEGORY>

<POST_TAG ID="17">Linear Feedback Shift Register</POST_TAG>

<CATEGORY ID="11">Programming</CATEGORY>

<POST_TAG ID="19">svn repository</POST_TAG>

<CATEGORY ID="5">Technology and Engineering</CATEGORY>
